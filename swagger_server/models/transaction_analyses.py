# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TransactionAnalyses(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, category: str=None, average_spending: float=None):  # noqa: E501
        """TransactionAnalyses - a model defined in Swagger

        :param category: The category of this TransactionAnalyses.  # noqa: E501
        :type category: str
        :param average_spending: The average_spending of this TransactionAnalyses.  # noqa: E501
        :type average_spending: float
        """
        self.swagger_types = {
            'category': str,
            'average_spending': float
        }

        self.attribute_map = {
            'category': 'category',
            'average_spending': 'AverageSpending'
        }
        self._category = category
        self._average_spending = average_spending

    @classmethod
    def from_dict(cls, dikt) -> 'TransactionAnalyses':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TransactionAnalyses of this TransactionAnalyses.  # noqa: E501
        :rtype: TransactionAnalyses
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self) -> str:
        """Gets the category of this TransactionAnalyses.

        test  # noqa: E501

        :return: The category of this TransactionAnalyses.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this TransactionAnalyses.

        test  # noqa: E501

        :param category: The category of this TransactionAnalyses.
        :type category: str
        """

        self._category = category

    @property
    def average_spending(self) -> float:
        """Gets the average_spending of this TransactionAnalyses.

        test  # noqa: E501

        :return: The average_spending of this TransactionAnalyses.
        :rtype: float
        """
        return self._average_spending

    @average_spending.setter
    def average_spending(self, average_spending: float):
        """Sets the average_spending of this TransactionAnalyses.

        test  # noqa: E501

        :param average_spending: The average_spending of this TransactionAnalyses.
        :type average_spending: float
        """

        self._average_spending = average_spending
